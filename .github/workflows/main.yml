name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11' # Specify your desired Java version here
          distribution: 'adopt' # Use 'adopt' distribution for OpenJDK

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install maven -y


      - name: Unit Testing
        run: mvn test

      - name: Integration Testing
        run: mvn verify -DskipTests

      - name: Maven Build
        run: mvn clean install 

      - name: Static Code Analysis with SonarQube
        run: mvn clean package sonar:sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Quality Gate Status
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar
          mvn sonar:quality-gate -Dsonar.login="${{secrets.SONAR_TOKEN}}" -Dsonar.host.url="{{secrets.SONAR_HOST_URL}}"
        

      - name: Upload WAR file to Nexus
        run: |
          mvn deploy:deploy-file \
            -Durl="${{ secrets.NEXUS_URL }}" \
            -DrepositoryId="${{ secrets.NEXUS_REPOSITORY_ID }}" \
            -Dfile=target/Uber.jar \
            -DgroupId=com.example \
            -DartifactId=springboot \
            -Dversion=${{ steps.read_version.outputs.version }} \
            -Dpackaging=jar \
            -Dclassifier= \
            -DgeneratePom=false

      - name: Docker Image Build
        run: |
          docker build -t ${{ github.repository }}:v1.${{ github.run_number }} .
          docker tag ${{ github.repository }}:v1.${{ github.run_number }} vishalkalchuri/${{ github.repository }}:v1.${{ github.run_number }}
          docker tag ${{ github.repository }}:v1.${{ github.run_number }} vishalkalchuri/${{ github.repository }}:latest
          docker push vishalkalchuri/${{ github.repository }}:v1.${{ github.run_number }}
          docker push vishalkalchuri/${{ github.repository }}:latest
